{"ast":null,"code":"var _jsxFileName = \"/home/rocha/\\xC1rea de Trabalho/react/pratica-react-useRef/src/App.js\",\n    _s = $RefreshSig$();\n\n// // Mostre os dados da aplicação, como aprensetado no vídeo\n// // Não utilize CSS externo, use o style para mudar as cores\n// // Se a situação estiver ativa pinte de verde, inativa vermelho\n// // Se o gasto for maior que 10000 mostre uma mensagem\n// const luana = {\n//   cliente: 'Luana',\n//   idade: 27,\n//   compras: [\n//     { nome: 'Notebook', preco: 'R$ 2500' },\n//     { nome: 'Geladeira', preco: 'R$ 3000' },\n//     { nome: 'Smartphone', preco: 'R$ 1500' },\n//   ],\n//   ativa: true,\n// };\n// const mario = {\n//   cliente: 'Mario',\n//   idade: 31,\n//   compras: [\n//     { nome: 'Notebook', preco: 'R$ 2500' },\n//     { nome: 'Geladeira', preco: 'R$ 3000' },\n//     { nome: 'Smartphone', preco: 'R$ 1500' },\n//     { nome: 'Guitarra', preco: 'R$ 3500' },\n//   ],\n//   ativa: false,\n// };\n// const App = () => {\n//   const dados = luana;\n//   const total = dados.compras\n//     .map((item) => Number(item.preco.replace('R$ ', '')))\n//     .reduce((a, b) => a + b);\n//   return (\n//     <div>\n//       <p>Nome: {dados.cliente}</p>\n//       <p>Idade: {dados.idade}</p>\n//       <p>\n//         Situação:{' '}\n//         <span style={{ color: dados.ativa ? 'green' : 'red' }}>\n//           {dados.ativa ? 'Ativa' : 'Inativa'}\n//         </span>\n//       </p>\n//       <p>Total: {total}</p>\n//       {total > 10000 && <p>Você está gastando muito</p>}\n//     </div>\n//   );\n// };\n// export default App;\n// const App = () => {\n//   const series = [\n//     { nome: 'Braking Bad', ano: 2010 },\n//     { nome: 'Suits', ano: 2012 },\n//     { nome: 'Black List', ano: 2014 },\n//     { nome: 'Shooter', ano: 2017 },\n//   ];\n//   return (\n//     <ul>\n//       {series\n//         .filter(({ ano }) => ano <= 2012)\n//         .map(({ nome, ano }) => (\n//           <li key={nome}>\n//             {nome}, {ano}\n//           </li>\n//         ))}\n//     </ul>\n//   );\n// };\n// export default App;\n// import React from 'react';\n// import ButtonModal from './ButtonModal';\n// import Modal from './Modal';\n// const App = () => {\n//   const [modal, setModal] = React.useState(false);\n//   let [itens, setItens] = React.useState('Teste');\n//   function handleClick() {\n//     setItens('Outros');\n//   }\n//   return (\n//     <div>\n//       <p>{itens}</p>\n//       <button onClick={handleClick}>Clicar</button>\n//       <Modal modal={modal} setModal={setModal} />\n//       <ButtonModal setModal={setModal} />\n//     </div>\n//   );\n// };\n// export default App;\n// Os links abaixo puxam dados de um produto em formato JSON\n// https://ranekapi.origamid.dev/json/api/produto/tablet\n// https://ranekapi.origamid.dev/json/api/produto/smartphone\n// https://ranekapi.origamid.dev/json/api/produto/notebook\n// Crie uma interface com 3 botões, um para cada produto.\n// Ao clicar no botão faça um fetch a api e mostre os dados do produto na tela.\n// Mostre apenas um produto por vez\n// Mostre a mensagem carregando... enquanto o fetch é realizado\n// import React from 'react';\n// const App = () => {\n//   const [comentarios, setComentarios] = React.useState([]);\n//   const [input, setInput] = React.useState('');\n//   const inputElemnet = React.useRef();\n//   function handleClick() {\n//     setComentarios([...comentarios, input]);\n//     setInput('');\n//     inputElemnet.current.focus();\n//   }\n//   return (\n//     <div>\n//       <ul>\n//         {comentarios.map((comentario) => (\n//           <li style={{ listStyle: 'none' }} key={comentario}>\n//             {comentario}\n//           </li>\n//         ))}\n//       </ul>\n//       <input\n//         type=\"text\"\n//         ref={inputElemnet}\n//         value={input}\n//         onChange={({ target }) => setInput(target.value)}\n//       />\n//       <br />\n//       <button onClick={handleClick}>Enviar</button>\n//     </div>\n//   );\n// };\n// export default App;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [carrinho, setCarrinho] = React.useState(0);\n  const [not, setNot] = React.useState(null);\n  const timeoutRef = React.useRef();\n\n  function handleClick() {\n    setCarrinho(carrinho + 1);\n    setNot('Itens adicionado ao carrinho!!');\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      setNot(null);\n    }, 1000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        background: '#5c2c0b',\n        height: '40px',\n        width: '40px',\n        color: 'white',\n        textAlign: 'center',\n        marginTop: '100px'\n      },\n      children: carrinho\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green',\n        background: 'orange',\n        height: '100%',\n        width: '100%'\n      },\n      children: not\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Adicionar ao Carrinho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"TjUTASr32OqYy78GZNuftsFtKhc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","carrinho","setCarrinho","useState","not","setNot","timeoutRef","useRef","handleClick","clearTimeout","current","setTimeout","background","height","width","color","textAlign","marginTop"],"sources":["/home/rocha/Área de Trabalho/react/pratica-react-useRef/src/App.js"],"sourcesContent":["// // Mostre os dados da aplicação, como aprensetado no vídeo\n// // Não utilize CSS externo, use o style para mudar as cores\n// // Se a situação estiver ativa pinte de verde, inativa vermelho\n// // Se o gasto for maior que 10000 mostre uma mensagem\n// const luana = {\n//   cliente: 'Luana',\n//   idade: 27,\n//   compras: [\n//     { nome: 'Notebook', preco: 'R$ 2500' },\n//     { nome: 'Geladeira', preco: 'R$ 3000' },\n//     { nome: 'Smartphone', preco: 'R$ 1500' },\n//   ],\n//   ativa: true,\n// };\n\n// const mario = {\n//   cliente: 'Mario',\n//   idade: 31,\n//   compras: [\n//     { nome: 'Notebook', preco: 'R$ 2500' },\n//     { nome: 'Geladeira', preco: 'R$ 3000' },\n//     { nome: 'Smartphone', preco: 'R$ 1500' },\n//     { nome: 'Guitarra', preco: 'R$ 3500' },\n//   ],\n//   ativa: false,\n// };\n\n// const App = () => {\n//   const dados = luana;\n\n//   const total = dados.compras\n//     .map((item) => Number(item.preco.replace('R$ ', '')))\n//     .reduce((a, b) => a + b);\n\n//   return (\n//     <div>\n//       <p>Nome: {dados.cliente}</p>\n//       <p>Idade: {dados.idade}</p>\n//       <p>\n//         Situação:{' '}\n//         <span style={{ color: dados.ativa ? 'green' : 'red' }}>\n//           {dados.ativa ? 'Ativa' : 'Inativa'}\n//         </span>\n//       </p>\n//       <p>Total: {total}</p>\n//       {total > 10000 && <p>Você está gastando muito</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// const App = () => {\n//   const series = [\n//     { nome: 'Braking Bad', ano: 2010 },\n//     { nome: 'Suits', ano: 2012 },\n//     { nome: 'Black List', ano: 2014 },\n//     { nome: 'Shooter', ano: 2017 },\n//   ];\n\n//   return (\n//     <ul>\n//       {series\n//         .filter(({ ano }) => ano <= 2012)\n//         .map(({ nome, ano }) => (\n//           <li key={nome}>\n//             {nome}, {ano}\n//           </li>\n//         ))}\n//     </ul>\n//   );\n// };\n// export default App;\n\n// import React from 'react';\n// import ButtonModal from './ButtonModal';\n// import Modal from './Modal';\n\n// const App = () => {\n//   const [modal, setModal] = React.useState(false);\n//   let [itens, setItens] = React.useState('Teste');\n\n//   function handleClick() {\n//     setItens('Outros');\n//   }\n\n//   return (\n//     <div>\n//       <p>{itens}</p>\n//       <button onClick={handleClick}>Clicar</button>\n//       <Modal modal={modal} setModal={setModal} />\n//       <ButtonModal setModal={setModal} />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// Os links abaixo puxam dados de um produto em formato JSON\n// https://ranekapi.origamid.dev/json/api/produto/tablet\n// https://ranekapi.origamid.dev/json/api/produto/smartphone\n// https://ranekapi.origamid.dev/json/api/produto/notebook\n// Crie uma interface com 3 botões, um para cada produto.\n// Ao clicar no botão faça um fetch a api e mostre os dados do produto na tela.\n// Mostre apenas um produto por vez\n// Mostre a mensagem carregando... enquanto o fetch é realizado\n\n// import React from 'react';\n\n// const App = () => {\n//   const [comentarios, setComentarios] = React.useState([]);\n//   const [input, setInput] = React.useState('');\n//   const inputElemnet = React.useRef();\n\n//   function handleClick() {\n//     setComentarios([...comentarios, input]);\n//     setInput('');\n//     inputElemnet.current.focus();\n//   }\n\n//   return (\n//     <div>\n//       <ul>\n//         {comentarios.map((comentario) => (\n//           <li style={{ listStyle: 'none' }} key={comentario}>\n//             {comentario}\n//           </li>\n//         ))}\n//       </ul>\n\n//       <input\n//         type=\"text\"\n//         ref={inputElemnet}\n//         value={input}\n//         onChange={({ target }) => setInput(target.value)}\n//       />\n//       <br />\n//       <button onClick={handleClick}>Enviar</button>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React from 'react';\n\nconst App = () => {\n  const [carrinho, setCarrinho] = React.useState(0);\n  const [not, setNot] = React.useState(null);\n  const timeoutRef = React.useRef();\n\n  function handleClick() {\n    setCarrinho(carrinho + 1);\n    setNot('Itens adicionado ao carrinho!!');\n\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      setNot(null);\n    }, 1000);\n  }\n\n  return (\n    <div>\n      <p\n        style={{\n          background: '#5c2c0b',\n          height: '40px',\n          width: '40px',\n          color: 'white',\n          textAlign: 'center',\n          marginTop: '100px',\n        }}\n      >\n        {carrinho}\n      </p>\n\n      <p\n        style={{\n          color: 'green',\n          background: 'orange',\n          height: '100%',\n          width: '100%',\n        }}\n      >\n        {not}\n      </p>\n\n      <button onClick={handleClick}>Adicionar ao Carrinho</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappingskB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,KAAK,CAACI,QAAN,CAAe,CAAf,CAAhC;EACA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,KAAK,CAACI,QAAN,CAAe,IAAf,CAAtB;EACA,MAAMG,UAAU,GAAGP,KAAK,CAACQ,MAAN,EAAnB;;EAEA,SAASC,WAAT,GAAuB;IACrBN,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;IACAI,MAAM,CAAC,gCAAD,CAAN;IAEAI,YAAY,CAACH,UAAU,CAACI,OAAZ,CAAZ;IACAJ,UAAU,CAACI,OAAX,GAAqBC,UAAU,CAAC,MAAM;MACpCN,MAAM,CAAC,IAAD,CAAN;IACD,CAF8B,EAE5B,IAF4B,CAA/B;EAGD;;EAED,oBACE;IAAA,wBACE;MACE,KAAK,EAAE;QACLO,UAAU,EAAE,SADP;QAELC,MAAM,EAAE,MAFH;QAGLC,KAAK,EAAE,MAHF;QAILC,KAAK,EAAE,OAJF;QAKLC,SAAS,EAAE,QALN;QAMLC,SAAS,EAAE;MANN,CADT;MAAA,UAUGhB;IAVH;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MACE,KAAK,EAAE;QACLc,KAAK,EAAE,OADF;QAELH,UAAU,EAAE,QAFP;QAGLC,MAAM,EAAE,MAHH;QAILC,KAAK,EAAE;MAJF,CADT;MAAA,UAQGV;IARH;MAAA;MAAA;MAAA;IAAA,QAdF,eAyBE;MAAQ,OAAO,EAAEI,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CA5CD;;GAAMR,G;;KAAAA,G;AA8CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}