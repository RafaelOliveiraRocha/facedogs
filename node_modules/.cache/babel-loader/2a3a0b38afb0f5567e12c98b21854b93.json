{"ast":null,"code":"var _jsxFileName = \"/home/rocha/\\xC1rea de Trabalho/react/pratica-react/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// // Mostre os dados da aplicação, como aprensetado no vídeo\n// // Não utilize CSS externo, use o style para mudar as cores\n// // Se a situação estiver ativa pinte de verde, inativa vermelho\n// // Se o gasto for maior que 10000 mostre uma mensagem\n// const luana = {\n//   cliente: 'Luana',\n//   idade: 27,\n//   compras: [\n//     { nome: 'Notebook', preco: 'R$ 2500' },\n//     { nome: 'Geladeira', preco: 'R$ 3000' },\n//     { nome: 'Smartphone', preco: 'R$ 1500' },\n//   ],\n//   ativa: true,\n// };\n// const mario = {\n//   cliente: 'Mario',\n//   idade: 31,\n//   compras: [\n//     { nome: 'Notebook', preco: 'R$ 2500' },\n//     { nome: 'Geladeira', preco: 'R$ 3000' },\n//     { nome: 'Smartphone', preco: 'R$ 1500' },\n//     { nome: 'Guitarra', preco: 'R$ 3500' },\n//   ],\n//   ativa: false,\n// };\n// const App = () => {\n//   const dados = luana;\n//   const total = dados.compras\n//     .map((item) => Number(item.preco.replace('R$ ', '')))\n//     .reduce((a, b) => a + b);\n//   return (\n//     <div>\n//       <p>Nome: {dados.cliente}</p>\n//       <p>Idade: {dados.idade}</p>\n//       <p>\n//         Situação:{' '}\n//         <span style={{ color: dados.ativa ? 'green' : 'red' }}>\n//           {dados.ativa ? 'Ativa' : 'Inativa'}\n//         </span>\n//       </p>\n//       <p>Total: {total}</p>\n//       {total > 10000 && <p>Você está gastando muito</p>}\n//     </div>\n//   );\n// };\n// export default App;\nconst App = () => {\n  const series = [{\n    nome: 'Braking Bad',\n    ano: 2010\n  }, {\n    nome: 'Suits',\n    ano: 2012\n  }, {\n    nome: 'Black List',\n    ano: 2014\n  }, {\n    nome: 'Shooter',\n    ano: 2017\n  }];\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: series.map(_ref => {\n      let {\n        nome,\n        ano\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [nome, \", \", ano]\n      }, nome, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","series","nome","ano","map"],"sources":["/home/rocha/Área de Trabalho/react/pratica-react/src/App.js"],"sourcesContent":["// // Mostre os dados da aplicação, como aprensetado no vídeo\n// // Não utilize CSS externo, use o style para mudar as cores\n// // Se a situação estiver ativa pinte de verde, inativa vermelho\n// // Se o gasto for maior que 10000 mostre uma mensagem\n// const luana = {\n//   cliente: 'Luana',\n//   idade: 27,\n//   compras: [\n//     { nome: 'Notebook', preco: 'R$ 2500' },\n//     { nome: 'Geladeira', preco: 'R$ 3000' },\n//     { nome: 'Smartphone', preco: 'R$ 1500' },\n//   ],\n//   ativa: true,\n// };\n\n// const mario = {\n//   cliente: 'Mario',\n//   idade: 31,\n//   compras: [\n//     { nome: 'Notebook', preco: 'R$ 2500' },\n//     { nome: 'Geladeira', preco: 'R$ 3000' },\n//     { nome: 'Smartphone', preco: 'R$ 1500' },\n//     { nome: 'Guitarra', preco: 'R$ 3500' },\n//   ],\n//   ativa: false,\n// };\n\n// const App = () => {\n//   const dados = luana;\n\n//   const total = dados.compras\n//     .map((item) => Number(item.preco.replace('R$ ', '')))\n//     .reduce((a, b) => a + b);\n\n//   return (\n//     <div>\n//       <p>Nome: {dados.cliente}</p>\n//       <p>Idade: {dados.idade}</p>\n//       <p>\n//         Situação:{' '}\n//         <span style={{ color: dados.ativa ? 'green' : 'red' }}>\n//           {dados.ativa ? 'Ativa' : 'Inativa'}\n//         </span>\n//       </p>\n//       <p>Total: {total}</p>\n//       {total > 10000 && <p>Você está gastando muito</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nconst App = () => {\n  const series = [\n    { nome: 'Braking Bad', ano: 2010 },\n    { nome: 'Suits', ano: 2012 },\n    { nome: 'Black List', ano: 2014 },\n    { nome: 'Shooter', ano: 2017 },\n  ];\n\n  return (\n    <ul>\n      {series.map(({ nome, ano }) => (\n        <li key={nome}>\n          {nome}, {ano}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMA,GAAG,GAAG,MAAM;EAChB,MAAMC,MAAM,GAAG,CACb;IAAEC,IAAI,EAAE,aAAR;IAAuBC,GAAG,EAAE;EAA5B,CADa,EAEb;IAAED,IAAI,EAAE,OAAR;IAAiBC,GAAG,EAAE;EAAtB,CAFa,EAGb;IAAED,IAAI,EAAE,YAAR;IAAsBC,GAAG,EAAE;EAA3B,CAHa,EAIb;IAAED,IAAI,EAAE,SAAR;IAAmBC,GAAG,EAAE;EAAxB,CAJa,CAAf;EAOA,oBACE;IAAA,UACGF,MAAM,CAACG,GAAP,CAAW;MAAA,IAAC;QAAEF,IAAF;QAAQC;MAAR,CAAD;MAAA,oBACV;QAAA,WACGD,IADH,QACWC,GADX;MAAA,GAASD,IAAT;QAAA;QAAA;QAAA;MAAA,QADU;IAAA,CAAX;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAjBD;;KAAMF,G;AAmBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}