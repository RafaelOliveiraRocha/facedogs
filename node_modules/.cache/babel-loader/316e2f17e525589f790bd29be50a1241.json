{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nconst types = {\n  email: {\n    regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    message: 'Preencha um email válido!'\n  }\n};\n\nconst useForm = type => {\n  _s();\n\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(null);\n\n  function validate(value) {\n    if (type === false) return true;\n\n    if (value.length === 0) {\n      setError('Preencha um valor!');\n      return false;\n    } else if (types[type] && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n\n  function onChange(_ref) {\n    let {\n      target\n    } = _ref;\n    if (error) validate(target.value);\n    setValue(target.value);\n  }\n\n  return {\n    value,\n    setValue,\n    onChange,\n    error,\n    validate: () => validate(value),\n    onBlur: () => validate(value)\n  };\n};\n\n_s(useForm, \"2xVBvVJ4brbuuUPeIt3XLET8CmM=\");\n\nexport default useForm;","map":{"version":3,"names":["React","types","email","regex","message","useForm","type","value","setValue","useState","error","setError","validate","length","test","onChange","target","onBlur"],"sources":["/home/rocha/Área de Trabalho/react/App-Dog-Social/src/Hooks/useForm.js"],"sourcesContent":["import React from 'react';\n\nconst types = {\n  email: {\n    regex:\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    message: 'Preencha um email válido!',\n  },\n};\n\nconst useForm = (type) => {\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(null);\n\n  function validate(value) {\n    if (type === false) return true;\n    if (value.length === 0) {\n      setError('Preencha um valor!');\n      return false;\n    } else if (types[type] && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n\n  function onChange({ target }) {\n    if (error) validate(target.value);\n    setValue(target.value);\n  }\n\n  return {\n    value,\n    setValue,\n    onChange,\n    error,\n    validate: () => validate(value),\n    onBlur: () => validate(value),\n  };\n};\n\nexport default useForm;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE;IACLC,KAAK,EACH,uJAFG;IAGLC,OAAO,EAAE;EAHJ;AADK,CAAd;;AAQA,MAAMC,OAAO,GAAIC,IAAD,IAAU;EAAA;;EACxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACS,QAAN,CAAe,IAAf,CAA1B;;EAEA,SAASG,QAAT,CAAkBL,KAAlB,EAAyB;IACvB,IAAID,IAAI,KAAK,KAAb,EAAoB,OAAO,IAAP;;IACpB,IAAIC,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;MACtBF,QAAQ,CAAC,oBAAD,CAAR;MACA,OAAO,KAAP;IACD,CAHD,MAGO,IAAIV,KAAK,CAACK,IAAD,CAAL,IAAe,CAACL,KAAK,CAACK,IAAD,CAAL,CAAYH,KAAZ,CAAkBW,IAAlB,CAAuBP,KAAvB,CAApB,EAAmD;MACxDI,QAAQ,CAACV,KAAK,CAACK,IAAD,CAAL,CAAYF,OAAb,CAAR;MACA,OAAO,KAAP;IACD,CAHM,MAGA;MACLO,QAAQ,CAAC,IAAD,CAAR;MACA,OAAO,IAAP;IACD;EACF;;EAED,SAASI,QAAT,OAA8B;IAAA,IAAZ;MAAEC;IAAF,CAAY;IAC5B,IAAIN,KAAJ,EAAWE,QAAQ,CAACI,MAAM,CAACT,KAAR,CAAR;IACXC,QAAQ,CAACQ,MAAM,CAACT,KAAR,CAAR;EACD;;EAED,OAAO;IACLA,KADK;IAELC,QAFK;IAGLO,QAHK;IAILL,KAJK;IAKLE,QAAQ,EAAE,MAAMA,QAAQ,CAACL,KAAD,CALnB;IAMLU,MAAM,EAAE,MAAML,QAAQ,CAACL,KAAD;EANjB,CAAP;AAQD,CA/BD;;GAAMF,O;;AAiCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}