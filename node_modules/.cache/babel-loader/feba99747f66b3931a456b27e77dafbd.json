{"ast":null,"code":"var _jsxFileName = \"/home/rocha/\\xC1rea de Trabalho/react/pratica-react-formulario/src/App.js\";\n// import React from 'react';\n// const App = () => {\n//   const [nome, setNome] = React.useState('');\n//   const [email, setEmail] = React.useState('');\n//   function handleChangeNome(event) {\n//     setNome(event.target.value);\n//   }\n//   function handleChangeEmail(event) {\n//     setEmail(event.target.value);\n//   }\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     console.log(event);\n//   }\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor=\"nome\">Nome</label>\n//       <input\n//         id=\"nome\"\n//         name=\"nome\"\n//         type=\"text\"\n//         value={nome}\n//         onChange={handleChangeNome}\n//       ></input>\n//       <label htmlFor=\"email\">Email</label>\n//       <input\n//         id=\"email\"\n//         name=\"email\"\n//         type=\"email\"\n//         value={email}\n//         onChange={handleChangeEmail}\n//       ></input>\n//       <button>Enviar</button>\n//     </form>\n//   );\n// };\n// export default App;\n//                                                        EXERCÍCIO:\n// Faça um fetch (POST) para a API abaixo\n// Para a criação ser aceita é necessário enviar dodos de:\n// nome, email, senha, cep, rua, numero, bairro, cidade e estado\n// Essa é a função utilizado para realizar o POST\n// fetch('https://ranekapi.origamid.dev/json/api/usuario', {\n//   method: 'POST',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n// form é o objeto com os dados do formulário\n// body: JSON.stringify(form),\n// });\n// Mostre uma mensagem na tela, caso a resposta da API seja positiva\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App"],"sources":["/home/rocha/Área de Trabalho/react/pratica-react-formulario/src/App.js"],"sourcesContent":["// import React from 'react';\n\n// const App = () => {\n//   const [nome, setNome] = React.useState('');\n//   const [email, setEmail] = React.useState('');\n\n//   function handleChangeNome(event) {\n//     setNome(event.target.value);\n//   }\n\n//   function handleChangeEmail(event) {\n//     setEmail(event.target.value);\n//   }\n\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     console.log(event);\n//   }\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor=\"nome\">Nome</label>\n//       <input\n//         id=\"nome\"\n//         name=\"nome\"\n//         type=\"text\"\n//         value={nome}\n//         onChange={handleChangeNome}\n//       ></input>\n\n//       <label htmlFor=\"email\">Email</label>\n//       <input\n//         id=\"email\"\n//         name=\"email\"\n//         type=\"email\"\n//         value={email}\n//         onChange={handleChangeEmail}\n//       ></input>\n//       <button>Enviar</button>\n//     </form>\n//   );\n// };\n\n// export default App;\n\n//                                                        EXERCÍCIO:\n\n// Faça um fetch (POST) para a API abaixo\n// Para a criação ser aceita é necessário enviar dodos de:\n// nome, email, senha, cep, rua, numero, bairro, cidade e estado\n\n// Essa é a função utilizado para realizar o POST\n// fetch('https://ranekapi.origamid.dev/json/api/usuario', {\n//   method: 'POST',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n// form é o objeto com os dados do formulário\n// body: JSON.stringify(form),\n// });\n\n// Mostre uma mensagem na tela, caso a resposta da API seja positiva\n\nimport React from 'react';\n\nconst App = () => {\n  return <div></div>;\n};\n\nexport default App;\n"],"mappings":";AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAChB,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAFD;;KAAMA,G;AAIN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}